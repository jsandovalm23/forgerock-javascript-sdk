name: forgerock-javascript-sdk

# The build section defines how to build the images of your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#build
build:
  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_ANGULAR-TODO_REGISTRY: image registry
  #  - OKTETO_BUILD_ANGULAR-TODO_REPOSITORY: image repo
  #  - OKTETO_BUILD_ANGULAR-TODO_IMAGE: image name
  #  - OKTETO_BUILD_ANGULAR-TODO_TAG: image tag
  angular-todo:
    context: .
    dockerfile: samples/angular-todo/Dockerfile
    target: base
    args:
      AM_URL: $AM_URL
      DEBUGGER_OFF: $DEBUGGER-OFF
      REALM_PATH: $REALM_PATH
      JOURNEY_LOGIN: $JOURNEY_LOGIN
      JOURNEY_REGISTER: $JOURNEY_REGISTER
      WEB_OAUTH_CLIENT: $WEB_OAUTH_CLIENT
      REST_OAUTH_CLIENT: $REST_OAUTH_CLIENT
      REST_OAUTH_SECRET: $REST_OAUTH_SECRET
  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_CENTRAL-LOGIN_REGISTRY: image registry
  #  - OKTETO_BUILD_CENTRAL-LOGIN_REPOSITORY: image repo
  #  - OKTETO_BUILD_CENTRAL-LOGIN_IMAGE: image name
  #  - OKTETO_BUILD_CENTRAL-LOGIN_TAG: image tag
  central-login:
    context: .
    dockerfile: samples/central-login/Dockerfile
    target: base
    args:
      AM_URL: $AM_URL
      DEBUGGER_OFF: $DEBUGGER-OFF
      REALM_PATH: $REALM_PATH
      JOURNEY_LOGIN: $JOURNEY_LOGIN
      JOURNEY_REGISTER: $JOURNEY_REGISTER
      WEB_OAUTH_CLIENT: $WEB_OAUTH_CLIENT
      REST_OAUTH_CLIENT: $REST_OAUTH_CLIENT
      REST_OAUTH_SECRET: $REST_OAUTH_SECRET

  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_EMBEDDED-LOGIN_REGISTRY: image registry
  #  - OKTETO_BUILD_EMBEDDED-LOGIN_REPOSITORY: image repo
  #  - OKTETO_BUILD_EMBEDDED-LOGIN_IMAGE: image name
  #  - OKTETO_BUILD_EMBEDDED-LOGIN_TAG: image tag
  embedded-login:
    context: .
    dockerfile: samples/embedded-login/Dockerfile
    target: base
    args:
      AM_URL: $AM_URL
      REALM_PATH: $REALM_PATH
      SCOPE: $SCOPE
      TIMEOUT: $TIMEOUT
      WEB_OAUTH_CLIENT: $WEB_OAUTH_CLIENT
      TREE: $TREE

  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_REACTJS-TODO_REGISTRY: image registry
  #  - OKTETO_BUILD_REACTJS-TODO_REPOSITORY: image repo
  #  - OKTETO_BUILD_REACTJS-TODO_IMAGE: image name
  #  - OKTETO_BUILD_REACTJS-TODO_TAG: image tag
  reactjs-todo:
    context: .
    dockerfile: samples/reactjs-todo/Dockerfile
    target: base
    args:
      AM_URL: $AM_URL
      DEBUGGER_OFF: $DEBUGGER-OFF
      REALM_PATH: $REALM_PATH
      JOURNEY_LOGIN: $JOURNEY_LOGIN
      JOURNEY_REGISTER: $JOURNEY_REGISTER
      WEB_OAUTH_CLIENT: $WEB_OAUTH_CLIENT
      REST_OAUTH_CLIENT: $REST_OAUTH_CLIENT
      REST_OAUTH_SECRET: $REST_OAUTH_SECRET

  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_TODO-API_REGISTRY: image registry
  #  - OKTETO_BUILD_TODO-API_REPOSITORY: image repo
  #  - OKTETO_BUILD_TODO-API_IMAGE: image name
  #  - OKTETO_BUILD_TODO-API_TAG: image tag
  todo-api:
    context: .
    dockerfile: Dockerfile

# The deploy section defines how to deploy your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#deploy
deploy:
  compose:
    file: docker-compose.yml
  commands:
    - envsubst < .env.example > .env
    - okteto build -t okteto.dev/base:${OKTETO_GIT_COMMIT} --build-arg AM_URL=$AM_URL --build-arg DEBUGGER_OFF=$DEBUGGER_OFF --build-arg  REALM_PATH=$REALM_PATH --build-arg JOURNEY_REGISTER=$JOURNEY_REGISTER --build-arg WEB_OAUTH_CLIENT=$WEB_OAUTH_CLIENT --build-arg REST_OAUTH_CLIENT=$REST_OAUTH_CLIENT --build-arg REST_OAUTH_SECRET=$REST_OAUTH_SECRET .
    - okteto build -t okteto.dev/react:${OKTETO_GIT_COMMIT} samples/reactjs-todo/Dockerfile
    - okteto build -t okteto.dev/angular:${OKTETO_GIT_COMMIT} samples/angular-todo/Dockerfile
    - okteto build -t okteto.dev/central:${OKTETO_GIT_COMMIT} samples/central-login/Dockerfile
    - okteto build -t okteto.dev/embedded:${OKTETO_GIT_COMMIT} samples/embedded-login/Dockerfile

# The dependencies section defines other git repositories to be deployed as part of your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#dependencies
# dependencies:
#   - https://github.com/okteto/sample

# The dev section defines how to activate a development container
# More info: https://www.okteto.com/docs/reference/manifest/#dev
dev:
  reactjs-todo:
    image: okteto/node:14
    command: npm run start:reactjs-todo
    workdir: /usr/share/nginx/html
    sync:
      - .:/usr/share/nginx/html
    forward:
      - 9229:9229
      - 8080:80
      - 8081:80
  todo-api:
    image: okteto/node:14
    command: bash
    workdir: /app/builder
    sync:
      - .:/app/builder
    forward:
      - 9229:9229
      - 8081:8081
